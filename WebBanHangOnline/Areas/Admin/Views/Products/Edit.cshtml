@model WebBanHangOnline.Models.EF.Product

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/products" class="nav-link">Product</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Edit</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Create Product</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Delete</a></li>
                    <li class="breadcrumb-item active">Edit</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Product Infomation</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new {}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x=>x.ProductId)
                        @Html.HiddenFor(x=>x.CreatedDate)
                        @Html.HiddenFor(x=>x.UnitsOnOrder)
                        <div class="card">
                            <div class="card-header p-2">                           
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="form-group">
                                    <label>Product Name</label>
                                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Product Name" })
                                    @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Alias</label>
                                    @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                    @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>ProductCode</label>
                                    @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "ProductCode" })
                                    @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Product Category</label>
                                    @Html.DropDownListFor(x => x.ProductCategoryId, ViewBag.ProductCategory as SelectList, "-Select Product Category-", new { @class = "form-control", @placeholder = "ProductCategory" })
                                    @Html.ValidationMessageFor(x => x.ProductCategoryId, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Description</label>
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Description" })
                                    @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>Product Detail</label>
                                    @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id = "txtDetail" })
                                    @Html.ValidationMessageFor(x => x.Detail, null, new { @class = "text-danger" })
                                </div>
                                <div class="row">
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label>Quantity</label>
                                            @Html.TextBoxFor(x => x.UnitsInStock, new { @class = "form-control", @Value = "1" })
                                            @Html.ValidationMessageFor(x => x.UnitsInStock, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                  
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label>Price</label>
                                            <input type="text" name="tempPrice" value="@Model.Price.ToString().Replace(",00",string.Empty)" id="tempPrice" class="form-control auto">
                                            @Html.HiddenFor(x => x.Price, new { @class = "", @placeholder = "Price" })
                                            @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label>PriceSale</label>
                                            <input type="text" name="tempPriceSale" id="tempPriceSale" value="@Model.PriceSale.ToString().Replace(",00",string.Empty)" class="form-control auto">
                                            @Html.HiddenFor(x => x.PriceSale, new { @class = "form-control", @placeholder = "PriceSale" })
                                            @Html.ValidationMessageFor(x => x.PriceSale, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label>OriginalPrice</label>
                                            <input type="text" name="tempOriginalPrice" id="tempOriginalPrice" value="@Model.OriginalPrice.ToString().Replace(",00",string.Empty)" class="form-control auto">
                                            @Html.HiddenFor(x => x.OriginalPrice, new { @class = "form-control", @placeholder = "OriginalPrice" })
                                            @Html.ValidationMessageFor(x => x.OriginalPrice, null, new { @class = "text-danger" })
                                        </div>
                                    </div>                         
                                </div>
                                <div class="row">
                                    <div class="col-3">
                                        <div class="form-group">

                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input", @id = "IsActive", @checked = "checked" })
                                                <label for="IsActive" class="custom-control-label">Hiển thị</label>
                                            </div>


                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(x => x.IsHot, new { @class = "custom-control-input", @id = "IsHot" })
                                                <label for="IsHot" class="custom-control-label">Hot</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(x => x.IsFeature, new { @class = "custom-control-input", @id = "IsFeature" })
                                                <label for="IsFeature" class="custom-control-label">Feature</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(x => x.IsSale, new { @class = "custom-control-input", @id = "IsSale" })
                                                <label for="IsSale" class="custom-control-label">Sales</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label>SEO Title</label>                                
                                        @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", @placeholder = "SeoTitle" })                                                              
                                </div>
                                <div class="form-group">
                                    <label>SEO Keywords</label>                                 
                                        @Html.TextBoxFor(x => x.SeoKeywords, new { @class = "form-control", @placeholder = "SeoKeywords" })                                                                   
                                </div>
                                <div class="form-group">
                                    <label>SEO Description</label>                                 
                                        @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control", @placeholder = "SeoDescription" })
                                                                      
                                </div>

                      
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <a href="/admin/products" class="btn btn-danger">Back</a>
                            </div>
                        </div> <!-- /.card -->
                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
@section  scripts{

    <!-- text editor -->
    <script>
        tinymce.init({
            selector: 'textarea#txtDetail',
            height: 300,
            images_upload_url: '/admin/products/TinyMceUpload',
            automatic_uploads: true,
            plugins: [
                'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview',
                'anchor', 'pagebreak',
                'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code',
                'fullscreen', 'insertdatetime',
                'media', 'table', 'emoticons', 'template', 'help'
            ],
            toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                'forecolor backcolor emoticons | help',
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.auto').autoNumeric('init', { aSep: '.', aDec: ',', mDec: '0' });
            $('#tempPrice').bind('blur focusout keypress keyup', function () {
                var demoGet = $('#tempPrice').autoNumeric('get');
                $('#Price').val(demoGet);
                $('#Price').autoNumeric('set', demoGet);
            });
            $('#tempPriceSale').bind('blur focusout keypress keyup', function () {
                var demoGet = $('#tempPriceSale').autoNumeric('get');
                $('#PriceSale').val(demoGet);
                $('#PriceSale').autoNumeric('set', demoGet);
            });
            $('#tempOriginalPrice').bind('blur focusout keypress keyup', function () {
                var demoGet = $('#tempOriginalPrice').autoNumeric('get');
                $('#OriginalPrice').val(demoGet);
                $('#OriginalPrice').autoNumeric('set', demoGet);
            });

        });
    </script>
}
